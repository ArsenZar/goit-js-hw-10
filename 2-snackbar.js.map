{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\n\nconst makePromise = ({ delay, shouldResolve }) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      shouldResolve == \"fulfilled\" ? resolve(delay) : reject(delay);\n    }, delay);\n  });\n};\n\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n\n  const takeMs = Number(document.querySelector('[data-delay]').value);\n  const takeState = document.querySelector('input[name=\"state\"]:checked');\n\n  console.log(takeState.value);\n\n  makePromise({ delay: takeMs, shouldResolve: takeState.value })\n    .then(delay => {\n      iziToast.success({\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        position: 'topRight',\n      });\n    }) // \"A\"\n    .catch(delay => {\n      iziToast.error({\n        message: `❌ Rejected promise in ${delay}ms`,\n        position: 'topRight',\n      });\n\n    });\n});\n"],"names":["form","makePromise","delay","shouldResolve","resolve","reject","takeMs","takeState","iziToast"],"mappings":"mIAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAErCC,EAAc,CAAC,CAAE,MAAAC,EAAO,cAAAC,KACrB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACfF,GAAiB,YAAcC,EAAQF,CAAK,EAAIG,EAAOH,CAAK,CAC9D,EAAGA,CAAK,CACV,CAAC,EAGHF,EAAK,iBAAiB,SAAW,GAAM,CACrC,EAAE,eAAc,EAEhB,MAAMM,EAAS,OAAO,SAAS,cAAc,cAAc,EAAE,KAAK,EAC5DC,EAAY,SAAS,cAAc,6BAA6B,EAEtE,QAAQ,IAAIA,EAAU,KAAK,EAE3BN,EAAY,CAAE,MAAOK,EAAQ,cAAeC,EAAU,KAAK,CAAE,EAC1D,KAAKL,GAAS,CACbM,EAAS,QAAQ,CACf,QAAS,0BAA0BN,CAAK,KACxC,SAAU,UAClB,CAAO,CACH,CAAC,EACA,MAAMA,GAAS,CACdM,EAAS,MAAM,CACb,QAAS,yBAAyBN,CAAK,KACvC,SAAU,UAClB,CAAO,CAEH,CAAC,CACL,CAAC"}